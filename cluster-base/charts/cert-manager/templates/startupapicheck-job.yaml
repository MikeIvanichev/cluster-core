---
# Source: cluster-base/charts/cert-manager/templates/startupapicheck-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: cluster-base-cert-manager-startupapicheck
  namespace: cluster-core
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: cluster-base
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.16.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.16.1
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "1"
spec:
  backoffLimit: 4
  template:
    metadata:
      labels:
        app: startupapicheck
        app.kubernetes.io/name: startupapicheck
        app.kubernetes.io/instance: cluster-base
        app.kubernetes.io/component: "startupapicheck"
        app.kubernetes.io/version: "v1.16.1"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.16.1
    spec:
      restartPolicy: OnFailure
      serviceAccountName: cluster-base-cert-manager-startupapicheck
      automountServiceAccountToken: false
      enableServiceLinks: false
      priorityClassName: "system-cluster-critical"
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-startupapicheck
          image: "quay.io/jetstack/cert-manager-startupapicheck:v1.16.1"
          imagePullPolicy: IfNotPresent
          args:
          - check
          - api
          - --wait=1m
          - -v
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: serviceaccount-token
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - name: serviceaccount-token
          projected:
            defaultMode: 292
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
