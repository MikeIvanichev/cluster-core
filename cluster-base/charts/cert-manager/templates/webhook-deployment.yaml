---
# Source: cluster-base/charts/cert-manager/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-base-cert-manager-webhook
  namespace: cluster-core
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: cluster-base
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.16.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.16.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/instance: cluster-base
      app.kubernetes.io/component: "webhook"
  template:
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/name: webhook
        app.kubernetes.io/instance: cluster-base
        app.kubernetes.io/component: "webhook"
        app.kubernetes.io/version: "v1.16.1"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.16.1
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
    spec:
      serviceAccountName: cluster-base-cert-manager-webhook
      automountServiceAccountToken: false
      enableServiceLinks: false
      priorityClassName: "system-cluster-critical"
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-webhook
          image: "quay.io/jetstack/cert-manager-webhook:v1.16.1"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --secure-port=10250
          - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
          - --dynamic-serving-ca-secret-name=cluster-base-cert-manager-webhook-ca
          - --dynamic-serving-dns-names=cluster-base-cert-manager-webhook
          - --dynamic-serving-dns-names=cluster-base-cert-manager-webhook.$(POD_NAMESPACE)
          - --dynamic-serving-dns-names=cluster-base-cert-manager-webhook.$(POD_NAMESPACE).svc
          
          ports:
          - name: https
            protocol: TCP
            containerPort: 10250
          - name: healthcheck
            protocol: TCP
            containerPort: 6080
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: serviceaccount-token
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - name: serviceaccount-token
          projected:
            defaultMode: 292
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
